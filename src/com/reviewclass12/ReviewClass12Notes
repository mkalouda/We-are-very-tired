Exceptions
-- are unwanted events that occur during the execution of a program and prevents the normal completion of a program
-- if we have a program that consists of 1000 lines, if we encounter an exception at line number 100 rest of the lines
    will be ignored an error message will be thrown and program will terminate abruptly

Exception Handling
-- we convert system generated error messages to user friendly messages so that anyone can understand the issue
-- we provide a backup (we are not fixing the original problem)
Keywords in java to achieve exception handling
1. try
2. catch
3. finally
4. throws
5. throw

    try:
        -- TRY with {} brackets is used to wrap the problematic code that can cause an issues at runtime
        -- CATCH with () and {} brackets is used to catch the exceptions in the () we place the name of the exception
            class and we create variable of that class {} we place backup code
            try{
                FileInputStream fis = new FileInputStream();
            }catch(FileNotFoundException e){

            sout"file not found"
            }
            finally:
            Finally block is used to execute the cleanup(code that release system resources)
            code once we enter the try block this finally block is always executed even if we are facing exceptions in
            the trey block or the catch block
            throws:
            keyword is used to explicitly what type of exceptions can be thrown from a specific method we use the
            throws keyword in the method header after the parentheses and specify the names of the classes of exceptions
            that can be thrown by that method
            throw:
            is used to throw an exception
            finalize()